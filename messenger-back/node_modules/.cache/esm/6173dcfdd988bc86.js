let createError,express,path,logger,cookieParser,indexRouter,headers,authorization;_d98‍.x([["default",()=>_d98‍.o]]);_d98‍.w("http-errors",[["default",["createError"],function(v){createError=v}]]);_d98‍.w("express",[["default",["express"],function(v){express=v}]]);_d98‍.w("path",[["default",["path"],function(v){path=v}]]);_d98‍.w("morgan",[["default",["logger"],function(v){logger=v}]]);_d98‍.w("cookie-parser",[["default",["cookieParser"],function(v){cookieParser=v}]]);_d98‍.w("./routes/index",[["default",["indexRouter"],function(v){indexRouter=v}]]);_d98‍.w("./middlewares/headers",[["default",["headers"],function(v){headers=v}]]);_d98‍.w("./middlewares/authorization",[["default",["authorization"],function(v){authorization=v}]]);









const app = express();

app.use(headers);
app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(express.static(path.join(__dirname, 'public')));

app.use(authorization);

app.use('/', indexRouter);

// catch 404 and forward to error handler
app.use((req, res, next) => {
  next(createError(404));
});

// error handler
app.use((err, req, res, next) => {
  // render the error page
  res.status(err.status || 500);
  res.json({
    status: 'error',
    message: err.message,
    stack: err.stack,
    errors: err.errors
  });
});

_d98‍.d(app);
